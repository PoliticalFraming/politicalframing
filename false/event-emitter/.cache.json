{"_id":"event-emitter","_rev":"23-21d9e47db211f9a7465999f240c4cc2c","name":"event-emitter","description":"Cross-environment event emitter","dist-tags":{"latest":"0.2.2"},"versions":{"0.1.0":{"name":"event-emitter","version":"0.1.0","description":"Basic event emitter for Node.js and browser","keywords":["event","events","trigger","observer","listener","emitter"],"author":{"name":"Mariusz Nowak","email":"medikoo+event-emitter@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib","repository":{"type":"git","url":"git://github.com/medikoo/event-emitter.git"},"bugs":{"email":"medikoo+event-emitter@medikoo.com","url":"https://github.com/medikoo/event-emitter/issues"},"dependencies":{"es5-ext":"0.6.x"},"_npmJsonOpts":{"file":"/Users/medikoo/.npm/event-emitter/0.1.0/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"event-emitter@0.1.0","devDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.23","_nodeVersion":"v0.5.4-pre","_defaultsLoaded":true,"dist":{"shasum":"58fc4e2883290f399f5ce6380c3d5e5910428056","tarball":"http://registry.npmjs.org/event-emitter/-/event-emitter-0.1.0.tgz"},"scripts":{},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.1.1":{"name":"event-emitter","version":"0.1.1","description":"Basic event emitter for Node.js and browser","keywords":["event","events","trigger","observer","listener","emitter"],"author":{"name":"Mariusz Nowak","email":"medikoo+event-emitter@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib","repository":{"type":"git","url":"git://github.com/medikoo/event-emitter.git"},"bugs":{"email":"medikoo+event-emitter@medikoo.com","url":"https://github.com/medikoo/event-emitter/issues"},"dependencies":{"es5-ext":"0.6.x"},"scripts":{"test":"./node_modules/tad/bin/tad lib"},"devDependencies":{"tad":"0.1.x"},"_npmJsonOpts":{"file":"/Users/medikoo/.npm/event-emitter/0.1.1/package/package.json","wscript":false,"contributors":false,"serverjs":false},"_id":"event-emitter@0.1.1","engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.0.23","_nodeVersion":"v0.5.4-pre","_defaultsLoaded":true,"dist":{"shasum":"6f9d52fdfef38fe2448bcd3e8e6d439981348604","tarball":"http://registry.npmjs.org/event-emitter/-/event-emitter-0.1.1.tgz"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.1.2":{"name":"event-emitter","version":"0.1.2","description":"Basic event emitter for Node.js and browser","keywords":["event","events","trigger","observer","listener","emitter"],"author":{"name":"Mariusz Nowak","email":"medikoo+event-emitter@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib","repository":{"type":"git","url":"git://github.com/medikoo/event-emitter.git"},"bugs":{"email":"medikoo+event-emitter@medikoo.com","url":"https://github.com/medikoo/event-emitter/issues"},"dependencies":{"es5-ext":"0.7.x"},"scripts":{"test":"node ./node_modules/tad/bin/tad lib"},"devDependencies":{"tad":"0.1.x"},"_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"_id":"event-emitter@0.1.2","optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_npmVersion":"1.1.0-2","_nodeVersion":"v0.6.8","_defaultsLoaded":true,"dist":{"shasum":"11dece644cf59c2b2294ab18cd23d2492a7fc25a","tarball":"http://registry.npmjs.org/event-emitter/-/event-emitter-0.1.2.tgz"},"readme":"# Event emitter\n\nBasic event emitter for Node.js and Browsers\n\n## Installation\n\nNode & npm:\n\n\t$ npm install event-emitter\n\n## Usage\n\n\tvar ee = require('event-emitter');\n\n\tvar MyCostructor = function () {};\n\tee(MyConstructor.prototype);\n\n\tvar myObj = new MyConstructor();\n\n\t// Register listener:\n\tvar listener;\n\tmyObj.on('name', listener = function (args) {\n\t\t // ... whatever\n\t});\n\n\t// Register listener that would be removed after first emit:\n\tmyObj.once('name', function (args) {\n\t\t// ... whatever\n\t});\n\n\t// Remove registered listener\n\tmyObj.off('name', listener);\n\n\t// Emit event\n\tmyObj.emit('name', arg1/*, arg2, arg3*/);\n","maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.1.3":{"name":"event-emitter","version":"0.1.3","description":"Basic event emitter for Node.js and browser","keywords":["event","events","trigger","observer","listener","emitter"],"author":{"name":"Mariusz Nowak","email":"medikoo+event-emitter@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib","repository":{"type":"git","url":"git://github.com/medikoo/event-emitter.git"},"bugs":{"email":"medikoo+event-emitter@medikoo.com","url":"https://github.com/medikoo/event-emitter/issues"},"dependencies":{"es5-ext":"0.8.x"},"scripts":{"test":"node ./node_modules/tad/bin/tad lib"},"devDependencies":{"tad":"0.1.x"},"optionalDependencies":{},"engines":{"node":">=0.4"},"_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"_id":"event-emitter@0.1.3","_engineSupported":true,"_npmVersion":"1.1.21","_nodeVersion":"v0.6.18","_defaultsLoaded":true,"dist":{"shasum":"b86eb318fbe02940c7a9da759ef22c8dd1adc9ba","tarball":"http://registry.npmjs.org/event-emitter/-/event-emitter-0.1.3.tgz"},"readme":"# Event emitter\n\nBasic event emitter for Node.js and Browsers\n\n## Installation\n\nNode & npm:\n\n\t$ npm install event-emitter\n\n## Usage\n\n\tvar ee = require('event-emitter');\n\n\tvar MyCostructor = function () {};\n\tee(MyConstructor.prototype);\n\n\tvar myObj = new MyConstructor();\n\n\t// Register listener:\n\tvar listener;\n\tmyObj.on('name', listener = function (args) {\n\t\t // ... whatever\n\t});\n\n\t// Register listener that would be removed after first emit:\n\tmyObj.once('name', function (args) {\n\t\t// ... whatever\n\t});\n\n\t// Remove registered listener\n\tmyObj.off('name', listener);\n\n\t// Emit event\n\tmyObj.emit('name', arg1/*, arg2, arg3*/);\n\n## Tests [![Build Status](https://secure.travis-ci.org/medikoo/event-emitter.png?branch=master)](https://secure.travis-ci.org/medikoo/event-emitter)\n\n\t$ npm test\n","maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.1.4":{"name":"event-emitter","version":"0.1.4","description":"Basic event emitter for Node.js and browser","keywords":["event","events","trigger","observer","listener","emitter"],"author":{"name":"Mariusz Nowak","email":"medikoo+event-emitter@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib","repository":{"type":"git","url":"git://github.com/medikoo/event-emitter.git"},"bugs":{"email":"medikoo+event-emitter@medikoo.com","url":"https://github.com/medikoo/event-emitter/issues"},"dependencies":{"es5-ext":"0.8.x"},"scripts":{"test":"node ./node_modules/tad/bin/tad lib"},"devDependencies":{"tad":"0.1.x"},"optionalDependencies":{},"engines":{"node":">=0.4"},"_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"_id":"event-emitter@0.1.4","_engineSupported":true,"_npmVersion":"1.1.24","_nodeVersion":"v0.6.19","_defaultsLoaded":true,"dist":{"shasum":"a472c361e450033be68130e505c033c360a72b7c","tarball":"http://registry.npmjs.org/event-emitter/-/event-emitter-0.1.4.tgz"},"readme":"# Event emitter\n\nBasic event emitter for Node.js and Browsers\n\n## Installation\n\nNode & npm:\n\n\t$ npm install event-emitter\n\n## Usage\n\n\tvar ee = require('event-emitter');\n\n\tvar MyCostructor = function () {};\n\tee(MyConstructor.prototype);\n\n\tvar myObj = new MyConstructor();\n\n\t// Register listener:\n\tvar listener;\n\tmyObj.on('name', listener = function (args) {\n\t\t // ... whatever\n\t});\n\n\t// Register listener that would be removed after first emit:\n\tmyObj.once('name', function (args) {\n\t\t// ... whatever\n\t});\n\n\t// Remove registered listener\n\tmyObj.off('name', listener);\n\n\t// Emit event\n\tmyObj.emit('name', arg1/*, arg2, arg3*/);\n\n## Tests [![Build Status](https://secure.travis-ci.org/medikoo/event-emitter.png?branch=master)](https://secure.travis-ci.org/medikoo/event-emitter)\n\n\t$ npm test\n","maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.1.5":{"name":"event-emitter","version":"0.1.5","description":"Basic event emitter for Node.js and browser","keywords":["event","events","trigger","observer","listener","emitter"],"author":{"name":"Mariusz Nowak","email":"medikoo+event-emitter@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib","repository":{"type":"git","url":"git://github.com/medikoo/event-emitter.git"},"bugs":{"email":"medikoo+event-emitter@medikoo.com","url":"https://github.com/medikoo/event-emitter/issues"},"dependencies":{"es5-ext":"0.8.x"},"scripts":{"test":"node ./node_modules/tad/bin/tad lib"},"devDependencies":{"tad":"0.1.x"},"optionalDependencies":{},"engines":{"node":">=0.4"},"readme":"# Event emitter\n\nBasic event emitter for Node.js and Browsers\n\n## Installation\n\nNode & npm:\n\n\t$ npm install event-emitter\n\n## Usage\n\n\tvar ee = require('event-emitter');\n\n\tvar MyCostructor = function () {};\n\tee(MyConstructor.prototype);\n\n\tvar myObj = new MyConstructor();\n\n\t// Register listener:\n\tvar listener;\n\tmyObj.on('name', listener = function (args) {\n\t\t // ... whatever\n\t});\n\n\t// Register listener that would be removed after first emit:\n\tmyObj.once('name', function (args) {\n\t\t// ... whatever\n\t});\n\n\t// Remove registered listener\n\tmyObj.off('name', listener);\n\n\t// Emit event\n\tmyObj.emit('name', arg1/*, arg2, arg3*/);\n\n## Tests [![Build Status](https://secure.travis-ci.org/medikoo/event-emitter.png?branch=master)](https://secure.travis-ci.org/medikoo/event-emitter)\n\n\t$ npm test\n","_id":"event-emitter@0.1.5","dist":{"shasum":"3bb38e8743edc42af06ad05881fbed93ed81cac0","tarball":"http://registry.npmjs.org/event-emitter/-/event-emitter-0.1.5.tgz"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.2.0":{"name":"event-emitter","version":"0.2.0","description":"Basic event emitter for Node.js and browser","keywords":["event","events","trigger","observer","listener","emitter"],"author":{"name":"Mariusz Nowak","email":"medikoo+event-emitter@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib","repository":{"type":"git","url":"git://github.com/medikoo/event-emitter.git"},"bugs":{"email":"medikoo+event-emitter@medikoo.com","url":"https://github.com/medikoo/event-emitter/issues"},"dependencies":{"es5-ext":"0.9.x"},"scripts":{"test":"node ./node_modules/tad/bin/tad lib"},"devDependencies":{"tad":"0.1.x"},"optionalDependencies":{},"engines":{"node":">=0.4"},"readme":"# EventEmitter – Cross-environment event emitter solution for JavaScript\n\n## Installation\n### NPM\n\nIn your project path:\n\n\t$ npm install event-emitter\n\n### Browser\n\nBrowser bundle can be easily created with help of [modules-webmake](https://github.com/medikoo/modules-webmake).  Mind that it relies on some EcmaScript5 features, so for older browsers you need as well [es5-shim](https://github.com/kriskowal/es5-shim).\n\n## Usage\n\n```javascript\nvar ee = require('event-emitter');\n\nvar emitter = ee({}), listener;\n\nemitter.on('test', listener = function (args) {\n  // …emitter logic\n});\n\nemitter.once('test', function (args) {\n  // …invoked only once(!)\n});\n\nemitter.emit('test', arg1, arg2/*…args*/); // Two above listeners invoked\nemitter.emit('test', arg1, arg2/*…args*/); // Only first listener invoked\n\nemitter.off('test', listener);              // Removed first listener\nemitter.emit('test', arg1, arg2/*…args*/); // No listeners invoked\n```\n\n## Additional functionalities (provided as separate modules)\n\n### allOff\n\nRemove all listeners\n\n```javascript\nvar eeAllOff = require('event-emitter/lib/all-off');\neeAllOff(emitter); // Removed all registered listeners on emitter\n```\n\n### pipe\n\nPipe events from one emitter to other\n\n```javascript\nvar eePipe  =require('event-emitter/lib/pipe');\n\nvar emitter1 = ee(), listener1;\nvar emitter2 = ee(), listener2;\n\nemitter1.on('test', listener1 = function () { });\nemitter2.on('test', listener2 = function () { });\n\nemitter1.emit('test'); // Invoked listener1\nemitter2.emit('test'); // Invoked listener2\n\nvar pipe = eePipe(emitter1, emitter2);\n\nemitter1.emit('test'); // Invoked listener1 and listener2\nemitter2.emit('test'); // Invoked just listener2\n\npipe.close();\n\nemitter1.emit('test'); // Invoked listener1\nemitter2.emit('test'); // Invoked listener2\n```\n\n## Tests [![Build Status](https://secure.travis-ci.org/medikoo/event-emitter.png?branch=master)](https://secure.travis-ci.org/medikoo/event-emitter)\n\n\t$ npm test\n","_id":"event-emitter@0.2.0","dist":{"shasum":"05c4970f7506815caeb180a640205f7d9f51c3b3","tarball":"http://registry.npmjs.org/event-emitter/-/event-emitter-0.2.0.tgz"},"_npmVersion":"1.1.61","_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.2.1":{"name":"event-emitter","version":"0.2.1","description":"Cross-environment event emitter","keywords":["event","events","trigger","observer","listener","emitter"],"author":{"name":"Mariusz Nowak","email":"medikoo+event-emitter@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib","repository":{"type":"git","url":"git://github.com/medikoo/event-emitter.git"},"bugs":{"email":"medikoo+event-emitter@medikoo.com","url":"https://github.com/medikoo/event-emitter/issues"},"dependencies":{"es5-ext":"0.9.x"},"scripts":{"test":"node ./node_modules/tad/bin/tad lib"},"devDependencies":{"tad":"0.1.x"},"optionalDependencies":{},"engines":{"node":">=0.4"},"readme":"# EventEmitter – Cross-environment event emitter solution for JavaScript\n\n## Installation\n### NPM\n\nIn your project path:\n\n\t$ npm install event-emitter\n\n### Browser\n\nBrowser bundle can be easily created with help of [modules-webmake](https://github.com/medikoo/modules-webmake).  Mind that it relies on some EcmaScript5 features, so for older browsers you need as well [es5-shim](https://github.com/kriskowal/es5-shim).\n\n## Usage\n\n```javascript\nvar ee = require('event-emitter');\n\nvar emitter = ee({}), listener;\n\nemitter.on('test', listener = function (args) {\n  // …emitter logic\n});\n\nemitter.once('test', function (args) {\n  // …invoked only once(!)\n});\n\nemitter.emit('test', arg1, arg2/*…args*/); // Two above listeners invoked\nemitter.emit('test', arg1, arg2/*…args*/); // Only first listener invoked\n\nemitter.off('test', listener);              // Removed first listener\nemitter.emit('test', arg1, arg2/*…args*/); // No listeners invoked\n```\n\n## Additional functionalities (provided as separate modules)\n\n### allOff(obj)\n\nRemove all listeners\n\n```javascript\nvar eeAllOff = require('event-emitter/lib/all-off');\neeAllOff(emitter); // Removed all registered listeners on emitter\n```\n\n### pipe(emitter1, emitter2)\n\nPipe events from one emitter to other\n\n```javascript\nvar eePipe = require('event-emitter/lib/pipe');\n\nvar emitter1 = ee(), listener1;\nvar emitter2 = ee(), listener2;\n\nemitter1.on('test', listener1 = function () { });\nemitter2.on('test', listener2 = function () { });\n\nemitter1.emit('test'); // Invoked listener1\nemitter2.emit('test'); // Invoked listener2\n\nvar pipe = eePipe(emitter1, emitter2);\n\nemitter1.emit('test'); // Invoked listener1 and listener2\nemitter2.emit('test'); // Invoked just listener2\n\npipe.close();\n\nemitter1.emit('test'); // Invoked listener1\nemitter2.emit('test'); // Invoked listener2\n```\n\n### hasListeners(obj[, type])\n\nWhether given object have registered listeners\n\n```javascript\nvar emitter = ee();\nvar hasListeners = require('event-emitter/lib/has-listeners');\nvar listner = function () {};\n\nhasListeners(emitter); // false\n\nemitter.on('foo', listener);\nhasListeners(emitter); // true\nhasListeners(emitter, 'foo'); // true\nhasListeners(emitter, 'bar'); // false\n\nemitter.off('foo', listener);\nhasListeners(emitter, 'foo'); // false\n```\n\n## Tests [![Build Status](https://secure.travis-ci.org/medikoo/event-emitter.png?branch=master)](https://secure.travis-ci.org/medikoo/event-emitter)\n\n\t$ npm test\n","_id":"event-emitter@0.2.1","dist":{"shasum":"bd89fc972dc494a6e39fda34b98860d6b6f55676","tarball":"http://registry.npmjs.org/event-emitter/-/event-emitter-0.2.1.tgz"},"_npmVersion":"1.1.61","_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}},"0.2.2":{"name":"event-emitter","version":"0.2.2","description":"Cross-environment event emitter","keywords":["event","events","trigger","observer","listener","emitter"],"author":{"name":"Mariusz Nowak","email":"medikoo+event-emitter@medikoo.com","url":"http://www.medikoo.com/"},"main":"lib","repository":{"type":"git","url":"git://github.com/medikoo/event-emitter.git"},"bugs":{"url":"https://github.com/medikoo/event-emitter/issues","email":"medikoo+event-emitter@medikoo.com"},"dependencies":{"es5-ext":"~0.9.2"},"scripts":{"test":"node ./node_modules/tad/bin/tad lib"},"devDependencies":{"tad":"~0.1.16"},"licence":"MIT","engines":{"node":">=0.4"},"readme":"# EventEmitter – Cross-environment event emitter solution for JavaScript\n\n## Usage\n\n```javascript\nvar ee = require('event-emitter');\n\nvar emitter = ee({}), listener;\n\nemitter.on('test', listener = function (args) {\n  // …emitter logic\n});\n\nemitter.once('test', function (args) {\n  // …invoked only once(!)\n});\n\nemitter.emit('test', arg1, arg2/*…args*/); // Two above listeners invoked\nemitter.emit('test', arg1, arg2/*…args*/); // Only first listener invoked\n\nemitter.off('test', listener);              // Removed first listener\nemitter.emit('test', arg1, arg2/*…args*/); // No listeners invoked\n```\n\n## Installation\n### NPM\n\nIn your project path:\n\n\t$ npm install event-emitter\n\n### Browser\n\nBrowser bundle can be easily created with help of [modules-webmake](https://github.com/medikoo/modules-webmake). Assuming that you have latest [Node.js](http://nodejs.org/) and [Git](http://git-scm.com/) installed, following will work in command shell of any system (Linux/MacOS/Windows):\n\n```\n$ npm install -g webmake\n$ git clone git://github.com/medikoo/event-emitter.git\n$ cd event-emitter\n$ npm install\n$ cd ..\n$ webmake --name=eventEmitter event-emitter/lib/index.js event-emitter.js\n```\n\nIf you work with AMD modules, add _amd_ option, so generated bundle is one:\n\n```\n$ webmake --name=eventEmitter --amd event-emitter/lib/index.js event-emitter.js\n```\n\n_Mind that eventEmitter relies on some EcmaScript5 features, so for older browsers you need to load as well [es5-shim](https://github.com/kriskowal/es5-shim)_\n\n## Functionalities provided as separate modules\n\n### allOff(obj)\n\nRemove all listeners\n\n```javascript\nvar eeAllOff = require('event-emitter/lib/all-off');\neeAllOff(emitter); // Removed all registered listeners on emitter\n```\n\n### unify(emitter1, emitter2)\n\nUnify listeners database of two emitter.\nEvents emitted on either emitter will call listeners attached to emitter object\n\n```javascript\nvar eeUnify = require('event-emitter/lib/unify');\n\nvar emitter1 = ee(), listener1, listener3;\nvar emitter2 = ee(), listener2, listener4;\n\nemitter1.on('test', listener1 = function () { });\nemitter2.on('test', listener2 = function () { });\n\nemitter1.emit('test'); // Invoked listener1\nemitter2.emit('test'); // Invoked listener2\n\nvar unify = eeUnify(emitter1, emitter2);\n\nemitter1.emit('test'); // Invoked listener1 and listener2\nemitter2.emit('test'); // Invoked listener1 and listener2\n\nemitter1.on('test', listener3 = function () { });\nemitter2.on('test', listener4 = function () { });\n\nemitter1.emit('test'); // Invoked listener1, listener2, listener3 and listener4\nemitter2.emit('test'); // Invoked listener1, listener2, listener3 and listener4\n```\n\n### hasListeners(obj[, type])\n\nWhether given object have registered listeners\n\n```javascript\nvar emitter = ee();\nvar hasListeners = require('event-emitter/lib/has-listeners');\nvar listener = function () {};\n\nhasListeners(emitter); // false\n\nemitter.on('foo', listener);\nhasListeners(emitter); // true\nhasListeners(emitter, 'foo'); // true\nhasListeners(emitter, 'bar'); // false\n\nemitter.off('foo', listener);\nhasListeners(emitter, 'foo'); // false\n```\n\n## Tests [![Build Status](https://secure.travis-ci.org/medikoo/event-emitter.png?branch=master)](https://secure.travis-ci.org/medikoo/event-emitter)\n\n\t$ npm test\n","readmeFilename":"README.md","_id":"event-emitter@0.2.2","dist":{"shasum":"c81e3724eb55407c5a0d5ee3299411f700f54291","tarball":"http://registry.npmjs.org/event-emitter/-/event-emitter-0.2.2.tgz"},"_from":".","_npmVersion":"1.2.25","_npmUser":{"name":"medikoo","email":"medikoo+npm@medikoo.com"},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"directories":{}}},"maintainers":[{"name":"medikoo","email":"medikoo+npm@medikoo.com"}],"time":{"0.1.0":"2011-08-08T10:29:11.216Z","0.1.1":"2011-08-08T14:54:42.697Z","0.1.2":"2012-01-22T16:49:56.017Z","0.1.3":"2012-05-28T16:22:30.139Z","0.1.4":"2012-06-13T13:32:39.533Z","0.1.5":"2012-08-06T20:40:11.347Z","0.2.0":"2012-09-19T18:12:33.103Z","0.2.1":"2012-09-21T10:01:40.827Z","0.2.2":"2013-06-05T17:48:12.650Z"},"author":{"name":"Mariusz Nowak","email":"medikoo+event-emitter@medikoo.com","url":"http://www.medikoo.com/"},"repository":{"type":"git","url":"git://github.com/medikoo/event-emitter.git"},"_attachments":{},"_etag":"\"EMR78ST7JWCGWXT84OOR5ZTXC\""}